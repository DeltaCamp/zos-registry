$grid_gutter: $gap;
//  + calc(#{$grid_gutter} * 2
$screen_viewport_xs: 0px;
$screen_viewport_sm: $mobile;
$screen_viewport_md: $tablet;
$screen_viewport_lg: $desktop;
$screen_viewport_xl: $widescreen;

// Grid array (used for generating the grid)
$grid_arr: (
  (xs, $screen_viewport_xs), 
  (sm, $screen_viewport_sm), 
  (md, $screen_viewport_md), 
  (lg, $screen_viewport_lg), 
  (xl, $screen_viewport_xl)
);

.row {
  display: grid;
  // min-height: 100%;
  grid-template-columns: repeat(12, 1fr);
  grid-gap: $grid_gutter;
  width: 100%;
}

@each $label, $breakpoint in $grid_arr {
  @media (min-width: #{$breakpoint}) {
    @for $i from 1 through 12 {
      @for $y from 1 through 12 {
        // Differs from bootstrap from the point that it specifies the index of a column to start
        // example: col-start-6 col-4 (start at col 6 columns and occupy 4 columns
        .col-start-#{$label}-#{$y}.col-#{$label}-#{$i} {
          grid-column: #{$y} / span #{$i};
        }
      }

      // as in bootstrap
      .col-#{$label}-#{$i} {
        grid-column-start: span #{$i};
        width: 100%;
      }
    }

    .container {
      width: calc(#{$breakpoint} - #{$grid_gutter});
    }

    // hack while Bulma columns/grid system still in place:
    .navbar > .container {
      width: calc(#{$breakpoint} - #{$grid_gutter});

      @media (min-width: 0px) and (max-width: $screen_viewport_sm) {
        width: 90%;
      }
    }
  }
}

.container {
  margin: 0 auto;

  @media (min-width: 0px) and (max-width: $screen_viewport_md) {
    width: 90%;
  }
}

.row {
  // background: black;
  // color: red;
  // margin-bottom: 10px;

  @media (min-width: 0px) and (max-width: $screen_viewport_md) {
    grid-column-gap: 0;
  }
}

div[class*='col-'] {
  // min-height: 50px;
  // background:red;
  // color: black;
}
